#N canvas 318 116 813 383 10;
#X declare -path else;
#X obj 55 29 inlet;
#X obj 290 158 text size \$0-markov;
#X obj 290 181 t b f;
#X obj 247 250 s \$0-index;
#X obj 523 29 inlet;
#N canvas 544 23 446 723 create 0;
#X obj 194 91 text define \$0-markov;
#X msg 194 68 clear;
#X obj 115 563 sel -1;
#X obj 173 662 list;
#X obj 115 520 text search \$0-markov, f 9;
#X obj 216 619 text get \$0-markov, f 9;
#X obj 173 695 text set \$0-markov, f 35;
#X obj 157 597 list;
#X obj 157 620 t l b;
#X obj 115 474 list split, f 27;
#X obj 274 451 r \$0-order;
#X obj 117 213 s \$0-index;
#X msg 117 193 0;
#X obj 194 45 r \$0-clear;
#X obj 160 190 s \$0-order;
#X obj 181 118 r \$0-order.in;
#X obj 181 335 array get \$0-indices, f 10;
#X obj 103 233 array get \$0-indices;
#X obj 88 266 array size \$0-indices;
#X obj 181 312 -;
#X obj 196 289 r \$0-order;
#X obj 88 450 list store, f 16;
#X obj 88 312 until;
#X obj 88 335 f;
#X obj 109 358 r \$0-order;
#X msg 88 427 get \$1 \$2;
#X obj 88 404 pack;
#X obj 109 381 + 1;
#X obj 118 335 + 1;
#X obj 88 289 t f b f;
#N canvas 287 198 211 264 test 0;
#X obj 39 34 inlet;
#X obj 39 195 outlet;
#X obj 39 80 !=;
#X obj 39 103 sel 1 0;
#X obj 39 57 text size \$0-memory;
#X obj 58 172 print [markov];
#X msg 58 126 can't create chain (memory is empty), f 18;
#X connect 0 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 6 0;
#X connect 4 0 2 0;
#X connect 6 0 5 0;
#X restore 74 95 pd test;
#X obj 74 118 t b b b b b b b;
#X obj 193 143 array size \$0-indices;
#X obj 160 169 clip 1;
#X obj 208 662 f 1e+08;
#X obj 216 596 trigger float float;
#X obj 115 497 t l l, f 11;
#X obj 268 261 t a;
#X obj 181 388 list append, f 15;
#X obj 129 312 f 0;
#X obj 74 17 inlet;
#X obj 74 72 b;
#X floatatom 232 312 5 0 0 0 - - - 0;
#X text 280 283 no circular;
#X obj 160 146 f 1;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 2 1 35 0;
#X connect 3 0 6 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 3 0;
#X connect 8 1 34 0;
#X connect 9 0 36 0;
#X connect 9 1 3 1;
#X connect 10 0 9 1;
#X connect 12 0 11 0;
#X connect 13 0 1 0;
#X connect 15 0 44 1;
#X connect 16 0 38 0;
#X connect 17 0 37 0;
#X connect 18 0 29 0;
#X connect 19 0 16 0;
#X connect 20 0 19 1;
#X connect 21 0 9 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 23 0 28 0;
#X connect 24 0 27 0;
#X connect 25 0 21 0;
#X connect 26 0 25 0;
#X connect 27 0 26 1;
#X connect 28 0 23 1;
#X connect 29 0 22 0;
#X connect 29 1 39 0;
#X connect 29 2 19 0;
#X connect 30 0 31 0;
#X connect 31 1 18 0;
#X connect 31 2 17 0;
#X connect 31 3 12 0;
#X connect 31 4 44 0;
#X connect 31 5 32 0;
#X connect 31 6 1 0;
#X connect 32 0 33 2;
#X connect 33 0 14 0;
#X connect 34 0 6 1;
#X connect 35 0 5 0;
#X connect 35 1 6 1;
#X connect 36 0 4 0;
#X connect 36 1 7 1;
#X connect 37 0 38 1;
#X connect 38 0 21 1;
#X connect 39 0 23 1;
#X connect 40 0 41 0;
#X connect 41 0 30 0;
#X connect 42 0 16 0;
#X connect 44 0 33 0;
#X restore 161 305 pd create;
#X obj 55 75 route bang;
#N canvas 108 78 408 668 output 0;
#X obj 59 18 inlet;
#X obj 59 152 text get \$0-markov;
#X obj 59 180 list split;
#X obj 131 180 r \$0-order;
#X obj 87 282 t b f;
#X obj 87 229 list length;
#X obj 87 360 list store, f 17;
#X msg 87 337 get \$1 1;
#X obj 117 475 text search \$0-markov;
#X obj 117 498 s \$0-index;
#X obj 89 125 r \$0-index;
#X obj 72 633 outlet;
#X obj 72 556 t l l;
#X obj 72 602 list split;
#X obj 129 556 list length;
#X obj 129 579 - 1;
#X obj 72 529 text get \$0-memory;
#X obj 59 125 f;
#X obj 59 412 list split 1;
#X obj 87 385 t f f, f 9;
#X obj 59 480 b;
#X obj 72 503 f;
#X obj 87 206 trigger list list;
#X obj 117 447 list;
#X obj 59 45 text size \$0-markov;
#X obj 59 68 !=;
#X obj 59 91 sel 1;
#X obj 266 187 sel 2;
#X obj 107 93 print [markov];
#X msg 107 70 no chain created;
#X obj 273 284 v \$0-reset;
#X obj 273 305 sel 1 0;
#X text 271 217 outlet;
#X text 275 239 not yet;
#X obj 87 314 rand.i;
#X obj 127 282 r \$0-seed;
#X obj 87 257 - 1;
#X connect 0 0 24 0;
#X connect 1 0 2 0;
#X connect 1 1 27 0;
#X connect 2 0 18 0;
#X connect 2 1 22 0;
#X connect 3 0 2 1;
#X connect 4 0 34 0;
#X connect 4 1 34 2;
#X connect 5 0 36 0;
#X connect 6 0 19 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 10 0 17 1;
#X connect 12 0 13 0;
#X connect 12 1 14 0;
#X connect 13 0 11 0;
#X connect 14 0 15 0;
#X connect 15 0 13 1;
#X connect 16 0 12 0;
#X connect 17 0 1 0;
#X connect 18 0 20 0;
#X connect 18 1 23 0;
#X connect 19 0 21 1;
#X connect 19 1 23 1;
#X connect 20 0 21 0;
#X connect 21 0 16 0;
#X connect 22 0 5 0;
#X connect 22 1 6 1;
#X connect 23 0 8 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 17 0;
#X connect 26 1 29 0;
#X connect 29 0 28 0;
#X connect 30 0 31 0;
#X connect 34 0 7 0;
#X connect 35 0 34 0;
#X connect 36 0 4 0;
#X restore 55 151 pd output;
#X msg 247 128 0;
#X obj 204 278 s \$0-order.in;
#X obj 290 130 b;
#N canvas 450 111 550 456 learn 0;
#X obj 177 197 sel -1;
#X obj 177 219 list;
#X obj 134 105 list append |||;
#X obj 177 242 t l b;
#X obj 134 151 text search \$0-memory, f 9;
#X obj 227 267 text size \$0-memory, f 9;
#X obj 177 338 text set \$0-memory 100000;
#X obj 219 310 array set \$0-indices;
#X obj 296 264 f;
#X obj 324 264 + 1;
#X obj 311 214 r \$0-clear;
#X msg 311 237 0;
#X obj 324 287 array size \$0-indices;
#X obj 77 82 route bang;
#X obj 134 128 trigger list list bang;
#X obj 76 52 inlet;
#X connect 0 0 1 0;
#X connect 0 1 7 0;
#X connect 1 0 3 0;
#X connect 2 0 14 0;
#X connect 3 0 6 0;
#X connect 3 1 5 0;
#X connect 4 0 0 0;
#X connect 5 0 7 0;
#X connect 8 0 9 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 11 0 8 1;
#X connect 13 1 2 0;
#X connect 14 0 4 0;
#X connect 14 1 1 1;
#X connect 14 2 8 0;
#X connect 15 0 13 0;
#X restore 523 95 pd learn;
#X obj 55 332 outlet;
#X text 554 188 Part of ELSE \; https://github.com/porres/pd-else;
#X text 556 169 Alexandre Torres Porres (2020);
#N canvas 654 285 499 298 savestate 0;
#X obj 54 74 savestate;
#X obj 54 97 list trim;
#N canvas 407 23 339 588 save 0;
#X obj 128 173 text tolist \$0-memory;
#X obj 98 311 text tolist \$0-markov;
#X obj 79 405 f;
#X obj 94 382 r \$0-order;
#X obj 79 451 s \$0-savestate;
#X obj 128 219 s \$0-savestate;
#X obj 113 288 s \$0-savestate;
#X obj 98 357 s \$0-savestate;
#X obj 113 242 array get \$0-indices;
#X obj 128 196 list prepend memory;
#X obj 113 265 list prepend indices;
#X obj 98 334 list prepend markov;
#X obj 79 428 list prepend order;
#X obj 86 495 r \$0-savestate;
#X obj 86 516 outlet;
#X obj 79 53 inlet;
#X obj 79 109 f;
#X obj 79 142 sel 1;
#X obj 126 54 inlet;
#X obj 126 114 r \$0-savestate-arg;
#X obj 126 81 != 0;
#X connect 0 0 9 0;
#X connect 1 0 11 0;
#X connect 2 0 12 0;
#X connect 3 0 2 1;
#X connect 8 0 10 0;
#X connect 9 0 5 0;
#X connect 10 0 6 0;
#X connect 11 0 7 0;
#X connect 12 0 4 0;
#X connect 13 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 0 0;
#X connect 17 0 2 0;
#X connect 17 0 1 0;
#X connect 17 0 8 0;
#X connect 18 0 20 0;
#X connect 19 0 16 1;
#X connect 20 0 16 1;
#X restore 140 42 pd save;
#X obj 179 18 inlet;
#X obj 54 120 route order markov indices memory, f 60;
#X obj 54 156 s \$0-order;
#X obj 321 144 text fromlist \$0-memory, f 13;
#X obj 143 149 text fromlist \$0-markov, f 9;
#X obj 232 233 array set \$0-indices;
#X obj 232 164 t a a;
#X obj 259 187 list length;
#X obj 259 210 array size \$0-indices;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 4 2 9 0;
#X connect 4 3 6 0;
#X connect 9 0 8 0;
#X connect 9 1 10 0;
#X connect 10 0 11 0;
#X restore 333 133 pd savestate;
#X obj 595 29 inlet;
#X obj 595 128 s \$0-order.in;
#N canvas 0 23 368 279 clear 0;
#X obj 141 30 inlet;
#X msg 167 98 clear;
#X obj 167 121 text define \$0-memory;
#X msg 151 148 resize 1 \, const 0;
#X obj 151 171 array define \$0-indices 1;
#X obj 111 145 b;
#X obj 109 200 s \$0-clear;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X restore 376 110 pd clear;
#X text 553 226 Based on a patch from the pd forum by ingox, f 23
;
#X obj 641 71 declare -path else;
#X obj 290 224 rand.i;
#X obj 344 181 r \$0-seed;
#X obj 353 204 - 1;
#N canvas 355 112 351 337 init 0;
#X obj 121 209 != 0;
#X msg 208 185 seed \$1;
#X obj 151 162 swap2;
#X obj 174 128 list split 1;
#X obj 88 66 args -;
#X obj 88 101 route float list -seed;
#X obj 88 175 unpack;
#X obj 208 210 s \$0-seed;
#X obj 88 261 s \$0-order.in;
#X obj 88 29 loadbanger 2;
#X obj 187 78 s \$0-order.in;
#X msg 187 54 1;
#X obj 121 234 s \$0-savestate-arg;
#X connect 0 0 12 0;
#X connect 1 0 7 0;
#X connect 2 0 5 0;
#X connect 2 1 1 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 1 6 0;
#X connect 5 2 3 0;
#X connect 6 0 8 0;
#X connect 6 1 0 0;
#X connect 9 0 4 0;
#X connect 9 1 11 0;
#X connect 11 0 10 0;
#X restore 450 199 pd init;
#N canvas 178 66 333 233 seed 0;
#X obj 45 20 inlet;
#X msg 102 100 seed;
#X msg 148 100 seed \$1;
#X obj 148 156 s \$0-seed;
#X obj 102 66 route bang float;
#X obj 45 73 t b a;
#X obj 45 145 s \$0-index;
#X msg 45 113 0;
#X obj 118 38 display;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 5 0 7 0;
#X connect 5 1 4 0;
#X connect 7 0 6 0;
#X restore 419 89 pd seed;
#X obj 161 61 route create order reset random savestate clear seed
learn;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 21 0;
#X connect 2 1 23 0;
#X connect 4 0 11 0;
#X connect 6 0 7 0;
#X connect 6 1 26 0;
#X connect 7 0 12 0;
#X connect 8 0 3 0;
#X connect 10 0 1 0;
#X connect 16 0 17 0;
#X connect 21 0 3 0;
#X connect 22 0 21 0;
#X connect 23 0 21 2;
#X connect 26 0 5 0;
#X connect 26 1 9 0;
#X connect 26 2 8 0;
#X connect 26 3 10 0;
#X connect 26 4 15 0;
#X connect 26 5 18 0;
#X connect 26 6 25 0;
#X connect 26 7 11 0;
